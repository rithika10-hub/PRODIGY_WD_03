<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: #f4f4f4;
        }

        .container {
            text-align: center;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 10px;
            margin-bottom: 20px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background: #fff;
            border: 2px solid #333;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2rem;
            cursor: pointer;
        }

        .cell:hover {
            background: #f0f0f0;
        }

        .turn {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .status {
            font-size: 1.2rem;
            font-weight: bold;
        }

        button {
            padding: 10px 20px;
            background: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }

        button:hover {
            background: #0056b3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Tic-Tac-Toe</h1>
        <div id="board" class="board">
            <div class="cell" data-cell="0"></div>
            <div class="cell" data-cell="1"></div>
            <div class="cell" data-cell="2"></div>
            <div class="cell" data-cell="3"></div>
            <div class="cell" data-cell="4"></div>
            <div class="cell" data-cell="5"></div>
            <div class="cell" data-cell="6"></div>
            <div class="cell" data-cell="7"></div>
            <div class="cell" data-cell="8"></div>
        </div>
        <p id="turn" class="turn">Player X's turn</p>
        <button id="restartButton">Restart Game</button>
        <p id="status" class="status"></p>
    </div>
    <script>
        const X_CLASS = 'x';
        const O_CLASS = 'o';
        let currentPlayerClass = X_CLASS;
        let gameActive = true;

        const board = document.getElementById('board');
        const restartButton = document.getElementById('restartButton');
        const turnDisplay = document.getElementById('turn');
        const statusDisplay = document.getElementById('status');

        const winningCombinations = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        const cells = document.querySelectorAll('.cell');

        startGame();

        restartButton.addEventListener('click', startGame);

        function startGame() {
            gameActive = true;
            currentPlayerClass = X_CLASS;
            turnDisplay.innerText = "Player X's turn";
            statusDisplay.innerText = '';

            cells.forEach(cell => {
                cell.classList.remove(X_CLASS);
                cell.classList.remove(O_CLASS);
                cell.removeEventListener('click', handleClick);
                cell.addEventListener('click', handleClick, { once: true });
            });
        }

        function handleClick(event) {
            const cell = event.target;
            const currentClass = currentPlayerClass;

            placeMark(cell, currentClass);
            if (checkWin(currentClass)) {
                endGame(false);
            } else if (isDraw()) {
                endGame(true);
            } else {
                swapTurns();
            }
        }

        function placeMark(cell, currentClass) {
            cell.classList.add(currentClass);
        }

        function swapTurns() {
            currentPlayerClass = currentPlayerClass === X_CLASS ? O_CLASS : X_CLASS;
            turnDisplay.innerText = currentPlayerClass === X_CLASS ? "Player X's turn" : "Player O's turn";
        }

        function checkWin(currentClass) {
            return winningCombinations.some(combination => {
                return combination.every(index => {
                    return cells[index].classList.contains(currentClass);
                });
            });
        }

        function isDraw() {
            return [...cells].every(cell => {
                return cell.classList.contains(X_CLASS) || cell.classList.contains(O_CLASS);
            });
        }

        function endGame(draw) {
            if (draw) {
                statusDisplay.innerText = "It's a draw!";
            } else {
                statusDisplay.innerText = `${currentPlayerClass === X_CLASS ? "Player X" : "Player O"} wins!`;
            }
            gameActive = false;
        }
    </script>
</body>
</html>
